:root {
    --flex-padding: 5px;
    --flex-margin: 5px;
    --flex-item-color: lightyellow;
    --flex-item-max-width: 120px;
    --flex-item-weight: bold;
    --flex-container-color: brown;
    --flex-container-width: 500px;
    --flex-container-height: 200px;
}

body {
    max-width: 1000px;
    margin: auto;
    padding: 5px;
}

.main-section {
    border: 5px solid black;
}

.side-nav {
    position: fixed;
    z-index: 1;
    top: 20px;
    right: 10px;
    background: #eee;
    overflow-x: hidden;
    padding: 8px 5px;
}

.side-nav a {
    padding: 6px 8px 6px 8px;
    text-decoration: none;
    color: #2196F3;
    display: block;
}

.resources {
    margin-bottom: 50px;
}

table tr:nth-child(even) {
    background-color: #eee;
}

table tr:nth-child(odd) {
    background-color: #fff;
}

table th {
    text-align: left;
    color: white;
    background-color: black;
    padding: 5px;
}

.flex-item {
    background-color: var(--flex-item-color);
    font-weight: var(--flex-item-weight);
    margin: var(--flex-margin);
    padding: var(--flex-padding);
}

.flex-container {
    display: flex;
    background-color: var(--flex-container-color);
    max-width: var(--flex-container-width);
    padding: var(--flex-padding);
    margin: var(--flex-margin);
}

.flex-container-row {    
    flex-wrap: wrap;
    flex-direction: row;
    justify-content: flex-end;    
}

.flex-container-row-align {
    flex-wrap: wrap;
    flex-direction: row;
    justify-content: flex-end;
    min-height: var(--flex-container-height);
    align-items: stretch;
    align-content: center;
}

.flex-item-row-align {
    max-width: var(--flex-item-max-width);
}

.flex-container-column {
    flex-wrap: wrap;
    flex-direction: column-reverse;
}

.flex-container-flow {
    flex-flow: row-reverse wrap-reverse;
}

.flex-item-flow {
    justify-content: space-evenly;
}

.flex-order-item-first {
    order: -5;
}

.flex-order-item-second {
    order: 2;
}

.flex-order-item-last {
    order: 100;
}

.flex-grow-item {
    flex-grow: 1;
}

.flex-grow-item-large {
    flex-grow: 3;
}

.flex-shrink-item {
    flex-shrink: 3;
}

.flex-flex-item {
    flex: 1 2 auto;
}

.flex-flex-item-large {
    flex: 4 3 content;
}

.flex-container-align-center {
    align-items: center;
    min-height: var(--flex-container-height);
    justify-content: space-around;
}

.flex-align-item-start {
    align-self: flex-start;
}

.flex-align-item-stretch {
    align-self: stretch;
}

.flex-align-item-end {
    align-self: flex-end;
}

.modify-dom-examples {
    display: flex;
}

.ui-controls-practice {
    border: 1px solid black;
    padding: 0 10px 10px 10px;
}

.ui-controls-practice .controls {
    margin: 10px;
}

.ui-controls-practice button {
    display: block;
    width: 300px;
}

.example-canvas {
    border: 1px solid black;
}

svg.draw {
    width: 300px;
    height: 300px;
    border: 5px solid #666;
}

.black-stroke {
    stroke: black;
    stroke-width: 2;
}

.orange-fill {
    fill: orange;
}

.blue-fill {
    fill: blue;
}

.title-bar {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    background-color: lightgrey;
    padding: 0 20px;
    margin: 10px 0;
}

.toggle, .toggleAll {
    cursor: pointer;
    text-decoration-line: underline;
    color: blue;
}

.absolute-position-example {
    border: 1px dotted blue;
    height: 200px;
    position: absolute;
    left: 50px;
    right: 50px;
    top: 100px;
    bottom: 50px;
}

.position-example {
    border: 1px solid black;
    height: 400px;
    position: relative;
}

.position-box {
    height: 50px;
    width: 130px;
    color: white;
    text-align: center;
    background-color: purple;
    position: absolute;
}

.top-left {
    left: 5px;
    top: 5px;
}

.bottom-left {
    left: 35px;
    bottom: 45px;
}

.top-right {
    right: 0px;
    top: 0px;
}

.bottom-right {
    right: 15px;
    bottom: 5px;
}

.transform-example {
    border: 1px solid black;
    height: 100px;
    position: relative;
}

.transform-box {
    color: white;
    height: 30px;
    width: 50px;
    position: absolute;
}

.red-box {
    background-color: red;
    left: 10px;
    top: 40px;
    transform: translate(100px) skew(10deg, 10deg) scale(2);
}

.blue-box {
    background-color: blue;
    right: 20px;
    bottom: 20px;
    transform: translate(-50px, -30px) skewY(10deg) rotateX(45deg);
}

.green-box {
    background-color: green;
    left: 300px;
    bottom: 80px;
    transform: matrix(1, -1, 1, 1, 60, 50) rotateX(55deg);
}

.storage-example {
    border: 1px solid black;
    height: 50px;
    padding: 20px;
}

.input-types-attributes input:invalid {
    border: 2px dashed red;
}
  
 .input-types-attributes input:valid {
    border: 2px solid black;
}